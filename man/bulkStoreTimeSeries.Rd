% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bulkStoreTimeSeries.R
\name{bulkStoreTimeSeries}
\alias{bulkStoreTimeSeries}
\title{Write an R time series to a PostgreSQL database (experimental)}
\usage{
bulkStoreTimeSeries(series, con, li = NULL, valid_from = NULL,
  valid_to = NULL, vintage_date = NULL, store_freq = T,
  tbl = "timeseries_main", tbl_vintages = "timeseries_vintages",
  md_unlocal = "meta_data_unlocalized", lookup_env = .GlobalEnv,
  overwrite = T, schema = "timeseries")
}
\arguments{
\item{series}{character name of a time series, S3 class ts. When used with lists it is convenient to set series to names(li). Note that the series name needs to be unique in the database!}

\item{con}{a PostgreSQL connection object.}

\item{li}{list of time series. Defaults to NULL to no break legacy calls that use lookup environments.}

\item{valid_from}{character date lower bound of a date range.}

\item{valid_to}{character date upper bound of a date range.}

\item{vintage_date}{character date, usually not used, defaults to NULL for non-vintages and vintages that are entered at the current end of the series. By specifying a date one can store former vintages.}

\item{store_freq}{}

\item{tbl}{character string denoting the name of the main time series table in the PostgreSQL database.}

\item{tbl_vintages}{}

\item{md_unlocal}{character string denoting the name of the table that holds unlocalized meta information.}

\item{lookup_env}{environment to look in for timeseries. Defaults to .GobalEnv.}

\item{overwrite}{logical should existing records (same primary key) be overwritten? Defaults to TRUE.}

\item{schema}{SQL schema name. Defaults to timeseries.}
}
\description{
This function writes time series object into a relational PostgreSQL database make use 
of PostgreSQL own 'key'=>'value' storage called hstore. The schema and database needs to 
created first. The parent R Package of this functions suggests a database structure
designed to store a larger amount of time series. This function uses INSERT INTO instead of the more convenient dbWritetable for performance reasons. DO NOT USE THIS FUNCTIONS IN LOOPS OR LAPPLY! This function can handle a set of time series on its own and is much faster than looping over a list. Non-unique primary keys are overwritten !
}
\author{
Matthias Bannert, Charles Clavadetscher, Gabriel Bucur
}
